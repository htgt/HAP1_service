{"filter":false,"title":"Dockerfile","tooltip":"/Dockerfile","undoManager":{"mark":28,"position":28,"stack":[[{"start":{"row":0,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["FROM amazonlinux:2 as downloader","","RUN yum install -y aws-cli","","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","","# Check if AWS CLI is installed and display version","RUN aws --version","","# Attempt to configure AWS CLI with provided credentials","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID","RUN aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY","","# Create /data directory","RUN mkdir -p /data","","# Attempt to copy files from S3 (For debugging, try listing the bucket first)","RUN aws s3 ls s3://hap1vcf/","","# If listing is successful, attempt to copy specific files","RUN aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz /data/GATK_variants.vcf.gz","RUN aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz.tbi /data/GATK_variants.vcf.gz.tbi",""],"id":30},{"start":{"row":0,"column":0},"end":{"row":39,"column":0},"action":"insert","lines":["# Stage 1: Build stage using Amazon Linux 2 to match Lambda's execution environment","FROM amazonlinux:2 as build-stage","","# Install Python 3.9 and other build essentials","RUN yum install -y python39 python39-devel python39-pip \\","    && yum groupinstall -y \"Development Tools\"","","# Install AWS CLI for accessing AWS resources","RUN python3.9 -m pip install awscli","","# Use ARG to declare variables that will hold AWS credentials, ensuring they are not persisted in the final image","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","","# Configure AWS CLI using the provided credentials","# Note: It's safer to use the credentials just for the commands that need them, and then unset them","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY","","# Upgrade pip and install your Python dependencies","# If your dependencies are in a private bucket or require AWS access, ensure commands here utilize the AWS CLI or other AWS SDKs as needed","RUN python3.9 -m pip install --upgrade pip","COPY requirements.txt .","RUN python3.9 -m pip install -r requirements.txt --target /python/lib/python3.9/site-packages/","","# Unset AWS CLI credentials to ensure they are not stored in the image","RUN aws configure set aws_access_key_id \"\" && \\","    aws configure set aws_secret_access_key \"\"","","# Stage 2: Setup the Lambda runtime environment","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages from the build stage","COPY --from=build-stage /python/lib/python3.9/site-packages/ /var/task/","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","CMD [\"lambda_function.lambda_handler\"]",""]}],[{"start":{"row":4,"column":26},"end":{"row":4,"column":27},"action":"insert","lines":["."],"id":31}],[{"start":{"row":4,"column":36},"end":{"row":4,"column":37},"action":"insert","lines":["."],"id":32}],[{"start":{"row":4,"column":52},"end":{"row":4,"column":53},"action":"insert","lines":["."],"id":33}],[{"start":{"row":0,"column":0},"end":{"row":39,"column":0},"action":"remove","lines":["# Stage 1: Build stage using Amazon Linux 2 to match Lambda's execution environment","FROM amazonlinux:2 as build-stage","","# Install Python 3.9 and other build essentials","RUN yum install -y python3.9 python3.9-devel python3.9-pip \\","    && yum groupinstall -y \"Development Tools\"","","# Install AWS CLI for accessing AWS resources","RUN python3.9 -m pip install awscli","","# Use ARG to declare variables that will hold AWS credentials, ensuring they are not persisted in the final image","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","","# Configure AWS CLI using the provided credentials","# Note: It's safer to use the credentials just for the commands that need them, and then unset them","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY","","# Upgrade pip and install your Python dependencies","# If your dependencies are in a private bucket or require AWS access, ensure commands here utilize the AWS CLI or other AWS SDKs as needed","RUN python3.9 -m pip install --upgrade pip","COPY requirements.txt .","RUN python3.9 -m pip install -r requirements.txt --target /python/lib/python3.9/site-packages/","","# Unset AWS CLI credentials to ensure they are not stored in the image","RUN aws configure set aws_access_key_id \"\" && \\","    aws configure set aws_secret_access_key \"\"","","# Stage 2: Setup the Lambda runtime environment","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages from the build stage","COPY --from=build-stage /python/lib/python3.9/site-packages/ /var/task/","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","CMD [\"lambda_function.lambda_handler\"]",""],"id":34},{"start":{"row":0,"column":0},"end":{"row":39,"column":0},"action":"insert","lines":["# Stage 1: Build stage using Amazon Linux 2 to match Lambda's execution environment","FROM amazonlinux:2 as build-stage","","# Install Python 3.9 and other build essentials","RUN yum install -y python3.9 python3.9-devel python3.9-pip \\","    && yum groupinstall -y \"Development Tools\"","","# Install AWS CLI for accessing AWS resources","RUN python3.9 -m pip install awscli","","# Use ARG to declare variables that will hold AWS credentials, ensuring they are not persisted in the final image","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","","# Configure AWS CLI using the provided credentials","# Note: It's safer to use the credentials just for the commands that need them, and then unset them","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY","","# Upgrade pip and install your Python dependencies","# If your dependencies are in a private bucket or require AWS access, ensure commands here utilize the AWS CLI or other AWS SDKs as needed","RUN python3.9 -m pip install --upgrade pip","COPY requirements.txt .","RUN python3.9 -m pip install -r requirements.txt --target /python/lib/python3.9/site-packages/","","# Unset AWS CLI credentials to ensure they are not stored in the image","RUN aws configure set aws_access_key_id \"\" && \\","    aws configure set aws_secret_access_key \"\"","","# Stage 2: Setup the Lambda runtime environment","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages from the build stage","COPY --from=build-stage /python/lib/python3.9/site-packages/ /var/task/","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","CMD [\"lambda_function.lambda_handler\"]",""]}],[{"start":{"row":0,"column":0},"end":{"row":39,"column":0},"action":"remove","lines":["# Stage 1: Build stage using Amazon Linux 2 to match Lambda's execution environment","FROM amazonlinux:2 as build-stage","","# Install Python 3.9 and other build essentials","RUN yum install -y python3.9 python3.9-devel python3.9-pip \\","    && yum groupinstall -y \"Development Tools\"","","# Install AWS CLI for accessing AWS resources","RUN python3.9 -m pip install awscli","","# Use ARG to declare variables that will hold AWS credentials, ensuring they are not persisted in the final image","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","","# Configure AWS CLI using the provided credentials","# Note: It's safer to use the credentials just for the commands that need them, and then unset them","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY","","# Upgrade pip and install your Python dependencies","# If your dependencies are in a private bucket or require AWS access, ensure commands here utilize the AWS CLI or other AWS SDKs as needed","RUN python3.9 -m pip install --upgrade pip","COPY requirements.txt .","RUN python3.9 -m pip install -r requirements.txt --target /python/lib/python3.9/site-packages/","","# Unset AWS CLI credentials to ensure they are not stored in the image","RUN aws configure set aws_access_key_id \"\" && \\","    aws configure set aws_secret_access_key \"\"","","# Stage 2: Setup the Lambda runtime environment","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages from the build stage","COPY --from=build-stage /python/lib/python3.9/site-packages/ /var/task/","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","CMD [\"lambda_function.lambda_handler\"]",""],"id":35},{"start":{"row":0,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["# Stage 1: Build stage using Amazon Linux 2 to match Lambda's execution environment","FROM amazonlinux:2 as build-stage","","# Install Development Tools","RUN yum groupinstall -y \"Development Tools\"","","# Amazon Linux 2 - install Python 3.8 (As of my last knowledge update, Python 3.9 needs to be manually compiled or use 3.8)","RUN yum install -y python38 python38-devel python38-pip","","# Install AWS CLI","RUN python3.8 -m pip install --upgrade pip && \\","    pip3 install awscli","","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","","# Configure AWS CLI","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY","","# Handle Python Dependencies","COPY requirements.txt .","RUN python3.8 -m pip install -r requirements.txt --target /python/lib/python3.8/site-packages/","","# Clear AWS CLI credentials","RUN aws configure set aws_access_key_id \"\" && \\","    aws configure set aws_secret_access_key \"\"","","# Stage 2: Setup the Lambda runtime environment","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages from the build stage","COPY --from=build-stage /python/lib/python3.8/site-packages/ /var/task/","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","CMD [\"lambda_function.lambda_handler\"]",""]}],[{"start":{"row":0,"column":0},"end":{"row":38,"column":0},"action":"remove","lines":["# Stage 1: Build stage using Amazon Linux 2 to match Lambda's execution environment","FROM amazonlinux:2 as build-stage","","# Install Development Tools","RUN yum groupinstall -y \"Development Tools\"","","# Amazon Linux 2 - install Python 3.8 (As of my last knowledge update, Python 3.9 needs to be manually compiled or use 3.8)","RUN yum install -y python38 python38-devel python38-pip","","# Install AWS CLI","RUN python3.8 -m pip install --upgrade pip && \\","    pip3 install awscli","","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","","# Configure AWS CLI","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY","","# Handle Python Dependencies","COPY requirements.txt .","RUN python3.8 -m pip install -r requirements.txt --target /python/lib/python3.8/site-packages/","","# Clear AWS CLI credentials","RUN aws configure set aws_access_key_id \"\" && \\","    aws configure set aws_secret_access_key \"\"","","# Stage 2: Setup the Lambda runtime environment","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages from the build stage","COPY --from=build-stage /python/lib/python3.8/site-packages/ /var/task/","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","CMD [\"lambda_function.lambda_handler\"]",""],"id":36},{"start":{"row":0,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["# Stage 1: Build stage using Amazon Linux 2 to match Lambda's execution environment","FROM amazonlinux:2 as build-stage","","# Install Development Tools","RUN yum groupinstall -y \"Development Tools\"","","# Amazon Linux 2 - install Python 3.8 (As of my last knowledge update, Python 3.9 needs to be manually compiled or use 3.8)","RUN yum install -y python38 python38-devel python38-pip","","# Install AWS CLI","RUN python3.8 -m pip install --upgrade pip && \\","    pip3 install awscli","","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","","# Configure AWS CLI","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY","","# Handle Python Dependencies","COPY requirements.txt .","RUN python3.8 -m pip install -r requirements.txt --target /python/lib/python3.8/site-packages/","","# Clear AWS CLI credentials","RUN aws configure set aws_access_key_id \"\" && \\","    aws configure set aws_secret_access_key \"\"","","# Stage 2: Setup the Lambda runtime environment","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages from the build stage","COPY --from=build-stage /python/lib/python3.8/site-packages/ /var/task/","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","CMD [\"lambda_function.lambda_handler\"]",""]}],[{"start":{"row":7,"column":35},"end":{"row":7,"column":36},"action":"insert","lines":["."],"id":37}],[{"start":{"row":7,"column":51},"end":{"row":7,"column":52},"action":"insert","lines":["."],"id":38}],[{"start":{"row":7,"column":26},"end":{"row":7,"column":27},"action":"insert","lines":["."],"id":39}],[{"start":{"row":0,"column":0},"end":{"row":38,"column":0},"action":"remove","lines":["# Stage 1: Build stage using Amazon Linux 2 to match Lambda's execution environment","FROM amazonlinux:2 as build-stage","","# Install Development Tools","RUN yum groupinstall -y \"Development Tools\"","","# Amazon Linux 2 - install Python 3.8 (As of my last knowledge update, Python 3.9 needs to be manually compiled or use 3.8)","RUN yum install -y python3.8 python3.8-devel python3.8-pip","","# Install AWS CLI","RUN python3.8 -m pip install --upgrade pip && \\","    pip3 install awscli","","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","","# Configure AWS CLI","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY","","# Handle Python Dependencies","COPY requirements.txt .","RUN python3.8 -m pip install -r requirements.txt --target /python/lib/python3.8/site-packages/","","# Clear AWS CLI credentials","RUN aws configure set aws_access_key_id \"\" && \\","    aws configure set aws_secret_access_key \"\"","","# Stage 2: Setup the Lambda runtime environment","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages from the build stage","COPY --from=build-stage /python/lib/python3.8/site-packages/ /var/task/","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","CMD [\"lambda_function.lambda_handler\"]",""],"id":40},{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["# Use the AWS Lambda Python 3.9 base image","FROM public.ecr.aws/lambda/python:3.9","","# Install AWS CLI to fetch resources from S3","# Note: This step is generally not recommended in a Lambda image. Consider pre-downloading or using another method if possible.","RUN yum install -y unzip \\","    && curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" \\","    && unzip awscliv2.zip \\","    && ./aws/install","","# Use ARG to declare AWS credentials; These should be passed at build time and are not stored in the image","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","ARG AWS_DEFAULT_REGION=eu-west-2","","# Configure AWS CLI with the provided credentials","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID \\","    && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY \\","    && aws configure set default.region $AWS_DEFAULT_REGION","","# Download VCF files from S3","RUN mkdir -p /var/task/data && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz /var/task/data/GATK_variants.vcf.gz && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz.tbi /var/task/data/GATK_variants.vcf.gz.tbi","","# Clear AWS CLI credentials after use","RUN rm -rf ~/.aws","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""]}],[{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"remove","lines":["# Use the AWS Lambda Python 3.9 base image","FROM public.ecr.aws/lambda/python:3.9","","# Install AWS CLI to fetch resources from S3","# Note: This step is generally not recommended in a Lambda image. Consider pre-downloading or using another method if possible.","RUN yum install -y unzip \\","    && curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" \\","    && unzip awscliv2.zip \\","    && ./aws/install","","# Use ARG to declare AWS credentials; These should be passed at build time and are not stored in the image","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","ARG AWS_DEFAULT_REGION=eu-west-2","","# Configure AWS CLI with the provided credentials","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID \\","    && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY \\","    && aws configure set default.region $AWS_DEFAULT_REGION","","# Download VCF files from S3","RUN mkdir -p /var/task/data && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz /var/task/data/GATK_variants.vcf.gz && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz.tbi /var/task/data/GATK_variants.vcf.gz.tbi","","# Clear AWS CLI credentials after use","RUN rm -rf ~/.aws","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""],"id":41},{"start":{"row":0,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["# Use the AWS Lambda Python 3.9 base image","FROM public.ecr.aws/lambda/python:3.9","","# Install AWS CLI to fetch resources from S3","RUN yum install -y unzip \\","    && curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" \\","    && unzip awscliv2.zip \\","    && ./aws/install","","# Use ARG to declare AWS credentials; These should be passed at build time and are not stored in the image","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","ARG AWS_DEFAULT_REGION=eu-west-2","","# Configure AWS CLI with the provided credentials","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID \\","    && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY \\","    && aws configure set default.region $AWS_DEFAULT_REGION","","# Download VCF files from S3","RUN mkdir -p /var/task/data && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz /var/task/data/GATK_variants.vcf.gz && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz.tbi /var/task/data/GATK_variants.vcf.gz.tbi","","# Clear AWS CLI credentials after use","RUN rm -rf ~/.aws","","# Copy the requirements.txt file to the container","COPY requirements.txt /var/task/","","# Install Python dependencies from requirements.txt","RUN pip install -r /var/task/requirements.txt --target /var/task","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""]}],[{"start":{"row":0,"column":0},"end":{"row":38,"column":0},"action":"remove","lines":["# Use the AWS Lambda Python 3.9 base image","FROM public.ecr.aws/lambda/python:3.9","","# Install AWS CLI to fetch resources from S3","RUN yum install -y unzip \\","    && curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" \\","    && unzip awscliv2.zip \\","    && ./aws/install","","# Use ARG to declare AWS credentials; These should be passed at build time and are not stored in the image","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","ARG AWS_DEFAULT_REGION=eu-west-2","","# Configure AWS CLI with the provided credentials","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID \\","    && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY \\","    && aws configure set default.region $AWS_DEFAULT_REGION","","# Download VCF files from S3","RUN mkdir -p /var/task/data && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz /var/task/data/GATK_variants.vcf.gz && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz.tbi /var/task/data/GATK_variants.vcf.gz.tbi","","# Clear AWS CLI credentials after use","RUN rm -rf ~/.aws","","# Copy the requirements.txt file to the container","COPY requirements.txt /var/task/","","# Install Python dependencies from requirements.txt","RUN pip install -r /var/task/requirements.txt --target /var/task","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""],"id":42},{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["# Stage 1: Build stage for compiling dependencies","FROM amazonlinux:2 as build-stage","","# Install Python 3.9, development tools, and AWS CLI","RUN yum install -y amazon-linux-extras && \\","    amazon-linux-extras enable python3.9 && \\","    yum install -y python3.9 python3.9-devel python3.9-pip && \\","    yum groupinstall -y \"Development Tools\"","","# Upgrade pip","RUN python3.9 -m pip install --upgrade pip","","# Use ARG to declare AWS credentials for use during the build","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","ARG AWS_DEFAULT_REGION=eu-west-2","","# Install AWS CLI","RUN python3.9 -m pip install awscli","","# Configure AWS CLI","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && \\","    aws configure set default.region $AWS_DEFAULT_REGION","","# Create a directory for the app","WORKDIR /var/task","","# Copy the requirements.txt file to the container","COPY requirements.txt .","","# Install Python dependencies from requirements.txt into the build directory","RUN python3.9 -m pip install -r requirements.txt --target /var/task","","# Stage 2: Setup the Lambda runtime environment with compiled dependencies","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages from the build stage","COPY --from=build-stage /var/task /var/task","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""]}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"remove","lines":["# Stage 1: Build stage for compiling dependencies","FROM amazonlinux:2 as build-stage","","# Install Python 3.9, development tools, and AWS CLI","RUN yum install -y amazon-linux-extras && \\","    amazon-linux-extras enable python3.9 && \\","    yum install -y python3.9 python3.9-devel python3.9-pip && \\","    yum groupinstall -y \"Development Tools\"","","# Upgrade pip","RUN python3.9 -m pip install --upgrade pip","","# Use ARG to declare AWS credentials for use during the build","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","ARG AWS_DEFAULT_REGION=eu-west-2","","# Install AWS CLI","RUN python3.9 -m pip install awscli","","# Configure AWS CLI","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && \\","    aws configure set default.region $AWS_DEFAULT_REGION","","# Create a directory for the app","WORKDIR /var/task","","# Copy the requirements.txt file to the container","COPY requirements.txt .","","# Install Python dependencies from requirements.txt into the build directory","RUN python3.9 -m pip install -r requirements.txt --target /var/task","","# Stage 2: Setup the Lambda runtime environment with compiled dependencies","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages from the build stage","COPY --from=build-stage /var/task /var/task","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""],"id":43},{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["# Stage 1: Build stage for compiling dependencies","FROM amazonlinux:2 as build-stage","","# Install Python 3.9, development tools, and AWS CLI","RUN yum install -y amazon-linux-extras && \\","    amazon-linux-extras enable python3.9 && \\","    yum install -y python3.9 python3.9-devel python3.9-pip && \\","    yum groupinstall -y \"Development Tools\"","","# Upgrade pip","RUN python3.9 -m pip install --upgrade pip","","# Install AWS CLI","RUN python3.9 -m pip install awscli","","# Create a directory for the app","WORKDIR /var/task","","# Copy the requirements.txt file to the container","COPY requirements.txt .","","# Install Python dependencies from requirements.txt into the build directory","RUN python3.9 -m pip install -r requirements.txt --target /var/task","","# Use ARG to declare the S3 path of the VCF file to be downloaded","ARG S3_VCF_PATH","","# Download the VCF file from S3","# Ensure AWS credentials are passed securely at runtime","RUN if [ -n \"$S3_VCF_PATH\" ] ; then aws s3 cp s3://$S3_VCF_PATH ./ ; else echo \"S3_VCF_PATH not provided\"; fi","","# Stage 2: Setup the Lambda runtime environment with compiled dependencies","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages and VCF file (if downloaded) from the build stage","COPY --from=build-stage /var/task /var/task","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""]}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["# Stage 1: Build stage for compiling dependencies","FROM amazonlinux:2 as build-stage","","# Install Python 3.9, development tools, and AWS CLI","RUN yum install -y amazon-linux-extras && \\","    amazon-linux-extras enable python3.9 && \\","    yum install -y python3.9 python3.9-devel python3.9-pip && \\","    yum groupinstall -y \"Development Tools\"","","# Upgrade pip","RUN python3.9 -m pip install --upgrade pip","","# Install AWS CLI","RUN python3.9 -m pip install awscli","","# Create a directory for the app","WORKDIR /var/task","","# Copy the requirements.txt file to the container","COPY requirements.txt .","","# Install Python dependencies from requirements.txt into the build directory","RUN python3.9 -m pip install -r requirements.txt --target /var/task","","# Use ARG to declare the S3 path of the VCF file to be downloaded","ARG S3_VCF_PATH","","# Download the VCF file from S3","# Ensure AWS credentials are passed securely at runtime","RUN if [ -n \"$S3_VCF_PATH\" ] ; then aws s3 cp s3://$S3_VCF_PATH ./ ; else echo \"S3_VCF_PATH not provided\"; fi","","# Stage 2: Setup the Lambda runtime environment with compiled dependencies","FROM public.ecr.aws/lambda/python:3.9","","# Copy installed packages and VCF file (if downloaded) from the build stage","COPY --from=build-stage /var/task /var/task","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""],"id":44},{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["# Stage 1: Build stage for compiling dependencies","FROM amazonlinux:2 as build-stage","","# Install Python 3.8, development tools, and AWS CLI","RUN yum install -y amazon-linux-extras && \\","    amazon-linux-extras enable python3.8 && \\","    yum install -y python3.8 python3.8-devel python3.8-pip && \\","    yum groupinstall -y \"Development Tools\"","","# Upgrade pip","RUN python3.8 -m pip install --upgrade pip","","# Install AWS CLI","RUN python3.8 -m pip install awscli","","# Create a directory for the app","WORKDIR /var/task","","# Copy the requirements.txt file to the container","COPY requirements.txt .","","# Install Python dependencies from requirements.txt into the build directory","RUN python3.8 -m pip install -r requirements.txt --target /var/task","","# Use ARG to declare the S3 path of the VCF file to be downloaded","ARG S3_VCF_PATH","","# Download the VCF file from S3","# Ensure AWS credentials are passed securely at runtime","RUN if [ -n \"$S3_VCF_PATH\" ] ; then aws s3 cp s3://$S3_VCF_PATH ./ ; else echo \"S3_VCF_PATH not provided\"; fi","","# Stage 2: Setup the Lambda runtime environment with compiled dependencies","FROM public.ecr.aws/lambda/python:3.8","","# Copy installed packages and VCF file (if downloaded) from the build stage","COPY --from=build-stage /var/task /var/task","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""]}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["# Stage 1: Build stage for compiling dependencies","FROM amazonlinux:2 as build-stage","","# Install Python 3.8, development tools, and AWS CLI","RUN yum install -y amazon-linux-extras && \\","    amazon-linux-extras enable python3.8 && \\","    yum install -y python3.8 python3.8-devel python3.8-pip && \\","    yum groupinstall -y \"Development Tools\"","","# Upgrade pip","RUN python3.8 -m pip install --upgrade pip","","# Install AWS CLI","RUN python3.8 -m pip install awscli","","# Create a directory for the app","WORKDIR /var/task","","# Copy the requirements.txt file to the container","COPY requirements.txt .","","# Install Python dependencies from requirements.txt into the build directory","RUN python3.8 -m pip install -r requirements.txt --target /var/task","","# Use ARG to declare the S3 path of the VCF file to be downloaded","ARG S3_VCF_PATH","","# Download the VCF file from S3","# Ensure AWS credentials are passed securely at runtime","RUN if [ -n \"$S3_VCF_PATH\" ] ; then aws s3 cp s3://$S3_VCF_PATH ./ ; else echo \"S3_VCF_PATH not provided\"; fi","","# Stage 2: Setup the Lambda runtime environment with compiled dependencies","FROM public.ecr.aws/lambda/python:3.8","","# Copy installed packages and VCF file (if downloaded) from the build stage","COPY --from=build-stage /var/task /var/task","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""],"id":45},{"start":{"row":0,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["# Stage 1: Build stage for compiling dependencies","FROM amazonlinux:2 as build-stage","","# Install Python 3.8, development tools, and AWS CLI","RUN yum install -y amazon-linux-extras && \\","    amazon-linux-extras enable python3.8 && \\","    yum install -y python3.8 python3.8-devel python3.8-pip && \\","    yum groupinstall -y \"Development Tools\"","","# Upgrade pip","RUN python3.8 -m pip install --upgrade pip","","# Install AWS CLI","RUN python3.8 -m pip install awscli","","# Use ARG to declare AWS credentials and the default region for use during the build","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","ARG AWS_DEFAULT_REGION=eu-west-2","","# Configure AWS CLI using the provided build arguments","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && \\","    aws configure set default.region $AWS_DEFAULT_REGION","","# Create a directory for the app","WORKDIR /var/task","","# Copy the requirements.txt file to the container","COPY requirements.txt .","","# Install Python dependencies from requirements.txt into the build directory","RUN python3.8 -m pip install -r requirements.txt --target /var/task","","# Download the required VCF files from the S3 bucket","RUN aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz . && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz.tbi .","","# Stage 2: Setup the Lambda runtime environment with compiled dependencies","FROM public.ecr.aws/lambda/python:3.8","","# Copy installed packages and the downloaded VCF files from the build stage","COPY --from=build-stage /var/task /var/task","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""]}],[{"start":{"row":36,"column":52},"end":{"row":36,"column":53},"action":"remove","lines":["."],"id":46}],[{"start":{"row":36,"column":52},"end":{"row":36,"column":53},"action":"insert","lines":["."],"id":47},{"start":{"row":36,"column":53},"end":{"row":36,"column":54},"action":"insert","lines":["/"]},{"start":{"row":36,"column":54},"end":{"row":36,"column":55},"action":"insert","lines":["d"]},{"start":{"row":36,"column":55},"end":{"row":36,"column":56},"action":"insert","lines":["a"]},{"start":{"row":36,"column":56},"end":{"row":36,"column":57},"action":"insert","lines":["t"]},{"start":{"row":36,"column":57},"end":{"row":36,"column":58},"action":"insert","lines":["a"]}],[{"start":{"row":36,"column":58},"end":{"row":36,"column":59},"action":"insert","lines":["/"],"id":48}],[{"start":{"row":35,"column":49},"end":{"row":35,"column":50},"action":"insert","lines":["/"],"id":49},{"start":{"row":35,"column":50},"end":{"row":35,"column":51},"action":"insert","lines":["d"]},{"start":{"row":35,"column":51},"end":{"row":35,"column":52},"action":"insert","lines":["a"]},{"start":{"row":35,"column":52},"end":{"row":35,"column":53},"action":"insert","lines":["t"]},{"start":{"row":35,"column":53},"end":{"row":35,"column":54},"action":"insert","lines":["a"]},{"start":{"row":35,"column":54},"end":{"row":35,"column":55},"action":"insert","lines":["/"]}],[{"start":{"row":35,"column":48},"end":{"row":35,"column":49},"action":"remove","lines":["."],"id":50}],[{"start":{"row":36,"column":52},"end":{"row":36,"column":53},"action":"remove","lines":["."],"id":51}],[{"start":{"row":29,"column":23},"end":{"row":30,"column":0},"action":"insert","lines":["",""],"id":52},{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["",""]},{"start":{"row":31,"column":0},"end":{"row":31,"column":1},"action":"insert","lines":["M"]},{"start":{"row":31,"column":1},"end":{"row":31,"column":2},"action":"insert","lines":["K"]},{"start":{"row":31,"column":2},"end":{"row":31,"column":3},"action":"insert","lines":["D"]},{"start":{"row":31,"column":3},"end":{"row":31,"column":4},"action":"insert","lines":["I"]},{"start":{"row":31,"column":4},"end":{"row":31,"column":5},"action":"insert","lines":["R"]}],[{"start":{"row":31,"column":5},"end":{"row":31,"column":6},"action":"insert","lines":[" "],"id":53}],[{"start":{"row":31,"column":5},"end":{"row":31,"column":6},"action":"remove","lines":[" "],"id":54},{"start":{"row":31,"column":4},"end":{"row":31,"column":5},"action":"remove","lines":["R"]},{"start":{"row":31,"column":3},"end":{"row":31,"column":4},"action":"remove","lines":["I"]},{"start":{"row":31,"column":2},"end":{"row":31,"column":3},"action":"remove","lines":["D"]},{"start":{"row":31,"column":1},"end":{"row":31,"column":2},"action":"remove","lines":["K"]},{"start":{"row":31,"column":0},"end":{"row":31,"column":1},"action":"remove","lines":["M"]}],[{"start":{"row":31,"column":0},"end":{"row":31,"column":1},"action":"insert","lines":["D"],"id":55},{"start":{"row":31,"column":1},"end":{"row":31,"column":2},"action":"insert","lines":["I"]},{"start":{"row":31,"column":2},"end":{"row":31,"column":3},"action":"insert","lines":["R"]}],[{"start":{"row":31,"column":3},"end":{"row":31,"column":4},"action":"insert","lines":[" "],"id":56}],[{"start":{"row":31,"column":3},"end":{"row":31,"column":4},"action":"remove","lines":[" "],"id":57},{"start":{"row":31,"column":2},"end":{"row":31,"column":3},"action":"remove","lines":["R"]},{"start":{"row":31,"column":1},"end":{"row":31,"column":2},"action":"remove","lines":["I"]},{"start":{"row":31,"column":0},"end":{"row":31,"column":1},"action":"remove","lines":["D"]}],[{"start":{"row":0,"column":0},"end":{"row":51,"column":0},"action":"remove","lines":["# Stage 1: Build stage for compiling dependencies","FROM amazonlinux:2 as build-stage","","# Install Python 3.8, development tools, and AWS CLI","RUN yum install -y amazon-linux-extras && \\","    amazon-linux-extras enable python3.8 && \\","    yum install -y python3.8 python3.8-devel python3.8-pip && \\","    yum groupinstall -y \"Development Tools\"","","# Upgrade pip","RUN python3.8 -m pip install --upgrade pip","","# Install AWS CLI","RUN python3.8 -m pip install awscli","","# Use ARG to declare AWS credentials and the default region for use during the build","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","ARG AWS_DEFAULT_REGION=eu-west-2","","# Configure AWS CLI using the provided build arguments","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && \\","    aws configure set default.region $AWS_DEFAULT_REGION","","# Create a directory for the app","WORKDIR /var/task","","# Copy the requirements.txt file to the container","COPY requirements.txt .","","","","# Install Python dependencies from requirements.txt into the build directory","RUN python3.8 -m pip install -r requirements.txt --target /var/task","","# Download the required VCF files from the S3 bucket","RUN aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz /data/ && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz.tbi /data/","","# Stage 2: Setup the Lambda runtime environment with compiled dependencies","FROM public.ecr.aws/lambda/python:3.8","","# Copy installed packages and the downloaded VCF files from the build stage","COPY --from=build-stage /var/task /var/task","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""],"id":58},{"start":{"row":0,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["# Stage 1: Build stage for compiling dependencies","FROM amazonlinux:2 as build-stage","","# Install Python 3.8, development tools, and AWS CLI","RUN yum install -y amazon-linux-extras && \\","    amazon-linux-extras enable python3.8 && \\","    yum install -y python3.8 python3.8-devel python3.8-pip && \\","    yum groupinstall -y \"Development Tools\"","","# Upgrade pip","RUN python3.8 -m pip install --upgrade pip","","# Install AWS CLI","RUN python3.8 -m pip install awscli","","# Use ARG to declare AWS credentials and the default region for use during the build","ARG AWS_ACCESS_KEY_ID","ARG AWS_SECRET_ACCESS_KEY","ARG AWS_DEFAULT_REGION=eu-west-2","","# Configure AWS CLI using the provided build arguments","RUN aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \\","    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && \\","    aws configure set default.region $AWS_DEFAULT_REGION","","# Create a directory for the app","WORKDIR /var/task","","# Copy the requirements.txt file to the container","COPY requirements.txt .","","# Install Python dependencies from requirements.txt into the build directory","RUN python3.8 -m pip install -r requirements.txt --target /var/task","","# Create the data directory","RUN mkdir /data","","# Download the required VCF files from the S3 bucket into the /data directory","RUN aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz /data/ && \\","    aws s3 cp s3://hap1vcf/GATK_variants.vcf.gz.tbi /data/","","# Stage 2: Setup the Lambda runtime environment with compiled dependencies","FROM public.ecr.aws/lambda/python:3.8","","# Copy installed packages from the build stage","COPY --from=build-stage /var/task /var/task","","# Copy the downloaded VCF files from the build stage","COPY --from=build-stage /data /data","","# Copy your Lambda function code","COPY lambda_function.py /var/task/","","# Set the CMD to your handler","CMD [\"lambda_function.lambda_handler\"]",""]}]]},"ace":{"folds":[],"scrolltop":561.0000000000001,"scrollleft":0,"selection":{"start":{"row":37,"column":59},"end":{"row":37,"column":59},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":125,"mode":"ace/mode/dockerfile"}},"timestamp":1709578570865,"hash":"c9745606e6705e2b9ad4d65bacc5b50554149520"}